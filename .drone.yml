pipeline:
  build:
    image: ensime/ensime:v2.x-cache
    pull: true
    environment:
      - AKKA_TEST_TIMEFACTOR=10
    commands:
      - host `curl -s http://httpbin.org/ip | jq -r '.origin'` || true ;
      - git log | head -n 20 ; git fetch -q --tags
      - if $(git grep -qE "TODO|FIXME" *) ; then
          echo "Please remove TODO or FIXME. Create an issue at GitHub instead." ;
          exit 1 ;
        fi
      - sbt ++$SCALA_VERSION ensimeConfig ";createHeaders ;test:createHeaders ;it:createHeaders ;test:compile ;it:compile ;doc ;ensime/assembly";
        if $(! git diff --exit-code --quiet) ; then
          echo "Code formatting does not meet the project's standards:" ;
          git --no-pager diff ;
          exit 1 ;
        fi
      - sbt ++$SCALA_VERSION "testOnly -- -l IgnoreOnDrone" ;
      - sbt ++$SCALA_VERSION "it:testOnly -- -l IgnoreOnDrone" ;
      # - if [ "${SCALA_VERSION}" = "2.11.8" ] ; then
      #     git clone --depth 1 https://github.com/ensime/ensime-emacs.git ensime-emacs ;
      #     cd ensime-emacs/test/example ;
      #     echo 'ensimeServerJars := List(file("../../../target/scala-2.11/ensime_2.11-2.0.0-SNAPSHOT-assembly.jar"))' > ensime.sbt ;
      #     sbt ensimeConfig ; cd ../.. ;
      #     cask pkg-file ;
      #     cask install ;
      #     cask package ;
      #     test/run_emacs_tests.sh || test/run_emacs_tests.sh;
      #     cd $DRONE_BUILD_DIR ;
      #   fi
      - if [ -z "$DRONE_PULL_REQUEST" ] ; then
          sbt ++$SCALA_VERSION publish ;
        fi

  deploy:
    dockerhub:
      repo: ensime/ensime
      when:
        matrix:
          SCALA_VERSION: 2.11.8
    sftp:
      host: ensime.typelevel.org
      username: typelevel
      destination_path: ensime.typelevel.org/
      files:
        - target/scala-2.10/*-assembly.jar
        - target/scala-2.11/*-assembly.jar

matrix:
  SCALA_VERSION:
    - 2.11.8
    - 2.10.6
